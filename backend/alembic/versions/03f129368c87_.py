"""empty message

Revision ID: 03f129368c87
Revises: 
Create Date: 2023-08-07 09:03:59.457485

"""
import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision = "03f129368c87"
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "account",
        sa.Column("username", sa.String(length=256), nullable=False),
        sa.Column("password", sa.String(length=512), nullable=False),
        sa.Column(
            "scope",
            sa.Enum("STAFF", "TREASURER", "PRESIDENT", name="securityscopes"),
            nullable=False,
        ),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("last_name", sa.String(length=256), nullable=False),
        sa.Column("first_name", sa.String(length=256), nullable=False),
        sa.Column("promotion_year", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_account_id"), "account", ["id"], unique=False)
    op.create_table(
        "consumableitem",
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.Column(
            "icon",
            sa.Enum("GLASS", "BEER", "FOOD", "SOFT", "BARREL", "MISC", name="iconname"),
            nullable=False,
        ),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_consumableitem_id"), "consumableitem", ["id"], unique=False
    )
    op.create_table(
        "drink",
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_drink_id"), "drink", ["id"], unique=False)
    op.create_table(
        "outofstockitem",
        sa.Column("name", sa.String(length=256), nullable=False),
        sa.Column("buy_or_sell", sa.Boolean(), nullable=False),
        sa.Column(
            "icon",
            sa.Enum("GLASS", "BEER", "FOOD", "SOFT", "BARREL", "MISC", name="iconname"),
            nullable=False,
        ),
        sa.Column("sell_price", sa.Float(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(
        op.f("ix_outofstockitem_id"), "outofstockitem", ["id"], unique=False
    )
    op.create_table(
        "treasury",
        sa.Column("total_amount", sa.Float(), nullable=False),
        sa.Column("cash_amount", sa.Float(), nullable=False),
        sa.Column("lydia_rate", sa.Float(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_treasury_id"), "treasury", ["id"], unique=False)
    op.create_table(
        "transaction",
        sa.Column("datetime", sa.DateTime(timezone=True), nullable=False),
        sa.Column(
            "payment_method",
            sa.Enum("CARD", "CASH", "LYDIA", "TRANSFER", name="paymentmethod"),
            nullable=False,
        ),
        sa.Column("amount", sa.Float(), nullable=False),
        sa.Column("sale", sa.Boolean(), nullable=False),
        sa.Column(
            "type",
            sa.Enum("TRANSACTION", "TRESORERY", name="transactiontype"),
            nullable=False,
        ),
        sa.Column("description", sa.UnicodeText(), nullable=True),
        sa.Column("treasury_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["treasury_id"],
            ["treasury.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_transaction_id"), "transaction", ["id"], unique=False)
    op.create_table(
        "barrel",
        sa.Column("unit_price", sa.Float(), nullable=False),
        sa.Column("sell_price", sa.Float(), nullable=False),
        sa.Column("is_mounted", sa.Boolean(), nullable=False),
        sa.Column("empty", sa.Boolean(), nullable=False),
        sa.Column("drink_id", sa.Integer(), nullable=False),
        sa.Column("transaction_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["drink_id"],
            ["drink.id"],
        ),
        sa.ForeignKeyConstraint(
            ["transaction_id"],
            ["transaction.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_barrel_id"), "barrel", ["id"], unique=False)
    op.create_table(
        "consumable",
        sa.Column("sell_price", sa.Float(), nullable=False),
        sa.Column("unit_price", sa.Float(), nullable=False),
        sa.Column("empty", sa.Boolean(), nullable=False),
        sa.Column("consumable_item_id", sa.Integer(), nullable=False),
        sa.Column("transaction_id_purchase", sa.Integer(), nullable=True),
        sa.Column("transaction_id_sale", sa.Integer(), nullable=True),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["consumable_item_id"],
            ["consumableitem.id"],
        ),
        sa.ForeignKeyConstraint(
            ["transaction_id_purchase"],
            ["transaction.id"],
        ),
        sa.ForeignKeyConstraint(
            ["transaction_id_sale"],
            ["transaction.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_consumable_id"), "consumable", ["id"], unique=False)
    op.create_table(
        "outofstock",
        sa.Column("unit_price", sa.Float(), nullable=True),
        sa.Column("item_id", sa.Integer(), nullable=False),
        sa.Column("transaction_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["item_id"],
            ["outofstockitem.id"],
        ),
        sa.ForeignKeyConstraint(
            ["transaction_id"],
            ["transaction.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_outofstock_id"), "outofstock", ["id"], unique=False)
    op.create_table(
        "glass",
        sa.Column("barrel_id", sa.Integer(), nullable=False),
        sa.Column("transaction_id", sa.Integer(), nullable=False),
        sa.Column("id", sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(
            ["barrel_id"],
            ["barrel.id"],
        ),
        sa.ForeignKeyConstraint(
            ["transaction_id"],
            ["transaction.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_glass_id"), "glass", ["id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_glass_id"), table_name="glass")
    op.drop_table("glass")
    op.drop_index(op.f("ix_outofstock_id"), table_name="outofstock")
    op.drop_table("outofstock")
    op.drop_index(op.f("ix_consumable_id"), table_name="consumable")
    op.drop_table("consumable")
    op.drop_index(op.f("ix_barrel_id"), table_name="barrel")
    op.drop_table("barrel")
    op.drop_index(op.f("ix_transaction_id"), table_name="transaction")
    op.drop_table("transaction")
    op.drop_index(op.f("ix_treasury_id"), table_name="treasury")
    op.drop_table("treasury")
    op.drop_index(op.f("ix_outofstockitem_id"), table_name="outofstockitem")
    op.drop_table("outofstockitem")
    op.drop_index(op.f("ix_drink_id"), table_name="drink")
    op.drop_table("drink")
    op.drop_index(op.f("ix_consumableitem_id"), table_name="consumableitem")
    op.drop_table("consumableitem")
    op.drop_index(op.f("ix_account_id"), table_name="account")
    op.drop_table("account")
    # ### end Alembic commands ###
